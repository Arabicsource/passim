#!/usr/bin/perl

use strict;

my %deps = ();
my %ups = ();
my %stage = ();

my @jobs = ();

open CMD, "galago @ARGV --printJob=dot |" or die "$0: Couldn't open pipe: $!\n";
while (<CMD>) {
    if ( /^\s*(\S+) -> (\S+)/ ) {
	push @{ $deps{$2} }, $1;
    }
}
close CMD;

my $cmd = join(" ", "galago", @ARGV, "--mode=class=org.lemurproject.galago.tupleflow.execution.lsfstageexecutor 2>&1 |");
print $cmd, "\n";
open CMD, $cmd or die "$0: Couldn't open pipeline: $!\n";

while (<CMD>) {
    chomp;
    if ( /^bsub .*\-J \'([^\']+)\'/ ) {
	my $job = $1;
	$job =~ s/\[.*$//;
	push @jobs, $job;
	my @d = ();
	my @parts = split /\-/, $job;
	if ( exists($stage{$parts[0]}) and !exists($deps{$job}) ) {
	    push @d, $stage{$parts[0]};
	} else {
	    my $j = $job;
	    while ( $j ne '' ) {
		if ( exists($deps{$j}) ) {
		    push @d, map { $stage{$_} } @{ $deps{$j} };
		    last;
		}
		$j =~ s/\-?[A-Za-z]+$//;
	    }
	}
	$stage{$parts[0]} = $job;

	if ( scalar(@d) > 0 ) {
	    my $spec = join " && ", map { $ups{$_}++; "done($_-$$)" } @d;
	    s/^bsub /bsub -w '$spec' /;
	}
	s/ \-J '([^\'\[]+)([^\']*)\'/ -J '$1-${$}$2'/;
	print $_, "\n";
	system($_);
    }
}

$cmd = "bsub -K -w '" . join(" && ", map { "done($_-$$)" } grep { !exists($ups{$_}) } @jobs) . "' echo galago-$$ done";
print $cmd, "\n";
system($cmd);

